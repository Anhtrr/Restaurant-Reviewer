[{"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/index.js":"1","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/App.js":"2","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/reportWebVitals.js":"3","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/components/Navbar.js":"4","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Profile/Profile.js":"5","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Home/Home.js":"6","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/About/AboutUs.js":"7","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Login and Register/Login.js":"8","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Login and Register/Register.js":"9","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Explore/Explore.js":"10","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Register/GenericReview.js":"11","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/components/NewMap.js":"12","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/components/Map.js":"13"},{"size":671,"mtime":1667419105728,"results":"14","hashOfConfig":"15"},{"size":1998,"mtime":1669921129767,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1667419105728,"results":"17","hashOfConfig":"15"},{"size":4652,"mtime":1667936319000,"results":"18","hashOfConfig":"15"},{"size":147,"mtime":1667419105726,"results":"19","hashOfConfig":"15"},{"size":153,"mtime":1667419105726,"results":"20","hashOfConfig":"15"},{"size":1731,"mtime":1667936319000,"results":"21","hashOfConfig":"15"},{"size":5027,"mtime":1669777407591,"results":"22","hashOfConfig":"15"},{"size":2485,"mtime":1667936319864,"results":"23","hashOfConfig":"15"},{"size":209,"mtime":1667936319000,"results":"24","hashOfConfig":"15"},{"size":8926,"mtime":1669775191013,"results":"25","hashOfConfig":"15"},{"size":1797,"mtime":1669775191017,"results":"26","hashOfConfig":"15"},{"size":3018,"mtime":1669775191016,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zzjnr3",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/index.js",[],["60","61"],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/App.js",["62"],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/reportWebVitals.js",[],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/components/Navbar.js",[],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Profile/Profile.js",[],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Home/Home.js",[],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/About/AboutUs.js",["63","64","65","66","67","68"],"import React from 'react';\n\nimport '../../Styles/AboutUs.css';\nimport Ahn from \"../../Images/Ahn.PNG\"\nimport Derek from \"../../Images/Derek.PNG\"\nimport Michael from \"../../Images/Michael.jpg\"\n\nconst AboutUs=()=>{\n    return(\n        <>\n        <wrapper className=\"wrapper\">\n        <about>\n        <h1 className='h1-about'>About Us</h1>\n        <gall className='gallery-about'>\n          <a><img src={Ahn} />\n            <p></p>\n            <artists>Anh Tran</artists>\n            <desc>Hello! I'm currently a 4th year CS Student @ NYU. I use he/him/his pronouns. I love photography and boxing!</desc>\n          </a>\n          <a><img src={Derek} />\n            <p></p>\n            <artists>Derek Han</artists>\n            <desc>Hi all! I'm currently a 4th year CS Student @ NYU. I use he/him/his pronouns. I am avid about motorcycles, mechanical keyboards, and music.</desc>\n          </a>\n          <a><img src={Michael} />\n            <p></p>\n            <artists>Michael Thuo</artists>\n            <desc>Hey! I'm currently a 4th year CS Student @ NYU. I use he/him/his pronouns. I enjoy cooking and taking long walks around the city.</desc>\n          </a>\n        </gall>\n      </about>\n      <div className = \"aboutProj\">\n          <h2 className='h2-about'>About the Project</h2>\n          <p className='p2-about'>\n            This project was created for the final project of the CS Level Elective course \"Remote Development\" at NYU's College of Arts and Sciences. \n             The project was created by a team of 3 students: Anh Tran, Derek Han, and Michael Thuo. The project was created using React, Express, Node.js, and MongoDB.\n          </p>\n      </div>\n      </wrapper>\n      </>\n    )\n};\n\nexport default AboutUs;\n\n","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Login and Register/Login.js",[],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Login and Register/Register.js",[],"/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Explore/Explore.js",["69"],"import React from 'react';\nimport NewMap from '../../components/NewMap';\nimport Navbar from '../../components/Navbar'\n\nconst Explore = () => {\n    return (  \n       <NewMap />\n    );\n}\n\nexport default Explore;","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/Pages/Register/GenericReview.js",["70","71","72","73"],"import { Link } from \"react-router-dom\";\nimport \"./GenericReview.css\";\nimport { useState, useEffect } from \"react\";\nimport { React } from \"react\";\nimport axios from \"axios\";\n\nconst GenericReview = props => {\n    const [review, setReview] = useState({\n        id: \"\",\n        title: \"\",\n        description: \"\",\n        ambianceRating: \"\",\n        foodRating: \"\",\n        serviceRating: \"\",\n        priceRating: \"\",\n        overallRating: \"\",\n        date: \"\",\n        userId: \"\",\n        restaurantId: \"\"\n    });\n    \n    const [user, setUser] = useState({\n        id: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n    });\n\n    const handleSubmit = async (e) =>{\n        e.preventDefault();\n        const newReview = {\n            title: review.title,\n            description: review.description,\n            ambianceRating: review.ambianceRating,\n            foodRating: review.foodRating,\n            serviceRating: review.serviceRating,\n            priceRating: review.priceRating,\n            overallRating: review.overallRating,\n            userId: review.userId,\n            restaurantId: review.restaurantId\n        }\n        try {\n            const resp = await axios.post('/reviews', newReview);\n            console.log(resp.data);\n        } catch (error) {\n            console.log(error.response);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3>Review</h3>\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"title\">Title</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"title\"\n                                        placeholder=\"Enter title\"\n                                        value={review.title}\n                                        onChange={e => setReview({ ...review, title: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description\">Description</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"description\"\n                                        placeholder=\"Enter description\"\n                                        value={review.description}\n                                        onChange={e => setReview({ ...review, description: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"ambianceRating\">Ambiance Rating</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"ambianceRating\"\n                                        placeholder=\"Enter ambiance rating\"\n                                        value={review.ambianceRating}\n                                        onChange={e => setReview({ ...review, ambianceRating: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"foodRating\">Food Rating</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"foodRating\"\n                                        placeholder=\"Enter food rating\"\n                                        value={review.foodRating}\n                                        onChange={e => setReview({ ...review, foodRating: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"serviceRating\">Service Rating</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"serviceRating\"\n                                        placeholder=\"Enter service rating\"\n                                        value={review.serviceRating}\n                                        onChange={e => setReview({ ...review, serviceRating: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"priceRating\">Price Rating</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"priceRating\"\n                                        placeholder=\"Enter price rating\"\n                                        value={review.priceRating}\n                                        onChange={e => setReview({ ...review, priceRating: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"overallRating\">Overall Rating</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"overallRating\"\n                                        placeholder=\"Enter overall rating\"\n                                        value={review.overallRating}\n                                        onChange={e => setReview({ ...review, overallRating: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"date\">Date</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"date\"\n                                        placeholder=\"Enter date\"\n                                        value={review.date}\n                                        onChange={e => setReview({ ...review, date: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"userId\">User Id</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"userId\"\n                                        placeholder=\"Enter user id\"\n                                        value={review.userId}\n                                        onChange={e => setReview({ ...review, userId: e.target.value })}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"restaurantId\">Restaurant Id</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"restaurantId\"\n                                        placeholder=\"Enter restaurant id\"\n                                        value={review.restaurantId}\n                                        onChange={e => setReview({ ...review, restaurantId: e.target.value })}\n                                    />\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GenericReview;\n","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/components/NewMap.js",["74","75"],"import mapboxgl from \"mapbox-gl\";\nimport { useEffect, useRef} from 'react';\nimport markerJson from \"./restaurants.json\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport \"./NewMap.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiYW5odHJyIiwiYSI6ImNsOW9kbGtwazBnbTAzd281YXJ3ejhjcmsifQ.Et0LpdRG7mN6MB58p_52qQ\";\n\nconst NewMap = () =>{\n    const mapContainerRef = useRef(null);\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n            container: mapContainerRef.current,\n            style: \"mapbox://styles/anhtrr/cl9odtk6b001v15s1cq54igry\",\n            center: [-73.998017,40.731925],\n            zoom: 15,\n            pitch:45,\n          });\n        \n        markerJson.results.data.map((feature) =>{ \n            const center1 = [feature.longitude.replace(/['\"]+/g, ''), feature.latitude.replace(/['\"]+/g, '')];\n            console.log(center1);\n            new mapboxgl.Marker()\n                .setLngLat(center1)\n                .setPopup(\n                    new mapboxgl.Popup({ offset: 25 })\n                    .setHTML(\n                        `<div className =\"card\">\n                          <label>Place</label>\n                          <h3 className =\"place\">${feature.name}</h3>\n                          <label>Address</label>\n                          <p className =\"address\">${feature.address}</p>\n                          <label>Review</label>\n                          <p>${feature.location_string}</p>\n                        </div>`\n                      )\n                )\n                .addTo(map)\n        }\n        )\n\n        map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n        \n        //return () => map.remove();\n    }, []);\n    return <div className=\"map-container\" ref={mapContainerRef}>\n    </div>;\n};\n\nexport default NewMap;\n","/Users/derekhan/Documents/Remote Dev/Restaurant-Reviewer/front-end/src/components/Map.js",["76","77","78"],"import 'mapbox-gl/dist/mapbox-gl.css';\nimport { useEffect, useState } from 'react';\nimport ReactMapGL, { Marker, NavigationControl, Popup } from 'react-map-gl';\nimport axios from \"axios\";\nrequire('dotenv').config()\nconsole.log(process.env)\n//believe dotenv gets used at build time and not runtime, so app has to be build first? \n\nconst Mapp = () => {\n    const [viewport, setViewport] = useState([]);\n    const [userLoc, setUserLoc] = useState([]);\n    useEffect(() =>{\n        navigator.geolocation.getCurrentPosition((pos) => {\n            setViewport({\n                ...viewport,\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude,\n                zoom: 15,\n                pitch: 45,\n            });\n            setUserLoc({\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude,\n            })\n        });\n    }, []);\n    \n    const [pins, setPins] = useState([]);\n    useEffect(() => {\n        const getPins = async () => {\n          try {\n            const restaurants = await axios.get(\"/pins\");\n            setPins(restaurants.data);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        getPins();\n    }, []);\n\n    const [currentPlaceId, setCurrentPlaceId] = useState([]);\n    const handleMarkerClick = (id, lat, long) => {\n        setCurrentPlaceId({id: id, longitude: long, latitude: lat});\n        setViewport({ ...viewport, latitude: lat, longitude: long, zoom: 15, pitch: 45 });\n    };\n\n    return (  \n        <div>\n            {userLoc.latitude && userLoc.longitude &&(\n                <div>\n                    <ReactMapGL className=\"Original\"\n                        mapboxAccessToken = {\"pk.eyJ1IjoiYW5odHJyIiwiYSI6ImNsOW9kbGtwazBnbTAzd281YXJ3ejhjcmsifQ.Et0LpdRG7mN6MB58p_52qQ\"}\n                        initialViewState={viewport}\n                        style={{position: 'fixed', width: \"100%\", height: \"100%\"}}\n                        mapStyle=\"mapbox://styles/anhtrr/cl9odtk6b001v15s1cq54igry\"\n                        onRender={(event) => event.target.resize(viewport)} \n                    >\n                        {pins.map((p)=>\n                            <>\n                                <Marker     \n                                    latitude={p.latitude}\n                                    longitude={p.longitude}\n                                    onClick={() => handleMarkerClick(p._id, p.latitude, p.longitude)}\n                                />\n                            </>\n                        )}\n                        <Marker\n                            longitude={userLoc.longitude}\n                            latitude={userLoc.latitude}\n                            color=\"#fff\"\n                        />\n                        <NavigationControl\n                            position='top-right' />\n                        \n                    </ReactMapGL>\n                </div>\n            )}\n        </div>\n    );\n}\n \nexport default Mapp;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":15,"column":11,"nodeType":"89","endLine":15,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":15,"column":14,"nodeType":"89","endLine":15,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":20,"column":11,"nodeType":"89","endLine":20,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":20,"column":14,"nodeType":"89","endLine":20,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":25,"column":11,"nodeType":"89","endLine":25,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":25,"column":14,"nodeType":"89","endLine":25,"endColumn":35},{"ruleId":"83","severity":1,"message":"92","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"93","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14},{"ruleId":"83","severity":1,"message":"94","line":3,"column":20,"nodeType":"85","messageId":"86","endLine":3,"endColumn":29},{"ruleId":"83","severity":1,"message":"95","line":22,"column":12,"nodeType":"85","messageId":"86","endLine":22,"endColumn":16},{"ruleId":"83","severity":1,"message":"96","line":22,"column":18,"nodeType":"85","messageId":"86","endLine":22,"endColumn":25},{"ruleId":"83","severity":1,"message":"97","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":21,"column":47,"nodeType":"100","messageId":"101","endLine":21,"endColumn":49},{"ruleId":"83","severity":1,"message":"102","line":3,"column":49,"nodeType":"85","messageId":"86","endLine":3,"endColumn":54},{"ruleId":"103","severity":1,"message":"104","line":26,"column":8,"nodeType":"105","endLine":26,"endColumn":10,"suggestions":"106"},{"ruleId":"83","severity":1,"message":"107","line":41,"column":12,"nodeType":"85","messageId":"86","endLine":41,"endColumn":26},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Navbar' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'StarIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Popup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'viewport'. Either include it or remove the dependency array. You can also do a functional update 'setViewport(v => ...)' if you only need 'viewport' in the 'setViewport' call.","ArrayExpression",["110"],"'currentPlaceId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [viewport]",{"range":"113","text":"114"},[905,907],"[viewport]"]